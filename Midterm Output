import java.math.BigInteger;

public class GCDCalculator {
    public static void main(String[] args) {
        // Sample numbers
        BigInteger num1 = new BigInteger("12345678901234567890");
        BigInteger num2 = new BigInteger("98765432109876543210");

        // Calculate GCD
        BigInteger gcd = findGCD(num1, num2);

        // Print the result
        System.out.println("GCD of " + num1 + " and " + num2 + " is: " + gcd);
    }

    // Method to find GCD using Euclidean algorithm
    public static BigInteger findGCD(BigInteger a, BigInteger b) {
        // Ensure both numbers are positive
        a = a.abs();
        b = b.abs();

        // Base case: if b is zero, GCD is a
        if (b.equals(BigInteger.ZERO)) {
            return a;
        }

        // Recursive case: call findGCD with b and remainder of a divided by b
        return findGCD(b, a.mod(b));
    }
}